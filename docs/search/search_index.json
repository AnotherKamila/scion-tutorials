{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to SCION Tutorials\n\u00b6\n\n\nIntroduction\n\u00b6\n\n\nThis website provides step-by-step instructions on how to install and run the SCION infrastructure. It also provides a list of interesting projects that are using the SCION infrastructure for communication.\n\n\nGetting started\n\u00b6\n\n\nSCION can run on different platforms:\n\n\n\n\nNatively\n\n\nDesktop installation \u2013 \nUbuntu 16.04 x86\n\n\nRaspberry Pi build \u2013 \nRaspbian\n\n\n\n\n\n\nIn a virtual machine\n\n\nSetup for machines without static public IP address \u2013 \nVPN based setup\n\n\nSetup for machines with static public IP address \u2013 \nStatic IP setup\n\n\n\n\n\n\n\n\nRunning and connecting to the SCION infrastructure\n\u00b6\n\n\n\n\nRunning a \nlocal SCION topology\n\n\nConnecting to the \nSCIONLab network\n\n\n\n\nUsing SCION\n\u00b6\n\n\n\n\nVisualizing the network topology \u2013 \nSCION viz",
            "title": "Home"
        },
        {
            "location": "/#welcome-to-scion-tutorials",
            "text": "",
            "title": "Welcome to SCION Tutorials"
        },
        {
            "location": "/#introduction",
            "text": "This website provides step-by-step instructions on how to install and run the SCION infrastructure. It also provides a list of interesting projects that are using the SCION infrastructure for communication.",
            "title": "Introduction"
        },
        {
            "location": "/#getting-started",
            "text": "SCION can run on different platforms:   Natively  Desktop installation \u2013  Ubuntu 16.04 x86  Raspberry Pi build \u2013  Raspbian    In a virtual machine  Setup for machines without static public IP address \u2013  VPN based setup  Setup for machines with static public IP address \u2013  Static IP setup",
            "title": "Getting started"
        },
        {
            "location": "/#running-and-connecting-to-the-scion-infrastructure",
            "text": "Running a  local SCION topology  Connecting to the  SCIONLab network",
            "title": "Running and connecting to the SCION infrastructure"
        },
        {
            "location": "/#using-scion",
            "text": "Visualizing the network topology \u2013  SCION viz",
            "title": "Using SCION"
        },
        {
            "location": "/native_setup/ubuntu_x86_build/",
            "text": "Building SCION on Ubuntu 16.04 x86-64\n\u00b6\n\n\nIntroduction\n\u00b6\n\n\nThis tutorial will guide you through the steps required to install SCION on Ubuntu 16.04. This also includes the steps required to install the necessary packages. For details on how to build SCION on a Raspberry Pi, please take a look at \nhow to build SCION on a Raspberry Pi\n.\n\n\nPrerequisites\n\u00b6\n\n\nThe following steps will guide you through the installation of the tools necessary for running SCION.\n\n\n\n\nTip\n\n\nYou can skip prerequisites if you have your Go workspaces already configured on your machine.\n\n\n\n\nStep One \u2013 install Go\n\u00b6\n\n\nIn order to run SCION, you must have Go version 1.8.x installed. Download \nGo tools\n and extract them in \n/usr/local\n with the following command (with root permissions):\n\n\ntar -C /usr/local -xzf go1.8.5.linux-amd64.tar.gz\n\n\n\n\n\nThen, add the newly extracted binaries to \n$PATH\n:\n\n\necho\n \n'PATH=$PATH:/usr/local/go/bin'\n >> ~/.profile\n\nsource\n ~/.profile\n\n\n\n\n\nTest your Go installation with the following command:\n\n\ngo version\n\n\n\n\n\nThe output should be \ngo version go1.8.5 linux/amd64\n.\n\n\nStep Two \u2013 configure your Go workspace\n\u00b6\n\n\nAfter the installation of Go tools, it is necessary to set up your \nGo workspace\n. The following commands will create a default workspace at \n~/go\n and export it as the \n$GOPATH\n environment variable:\n\n\necho\n \n'export GOPATH=\"$HOME/go\"'\n >> ~/.profile\n\nsource\n ~/.profile\nmkdir -p \n\"\n$GOPATH\n/bin\"\n\n\necho\n \n'PATH=$PATH:$GOPATH/bin'\n >> ~/.profile\n\nsource\n ~/.profile\n\n\n\n\n\nSCION installation\n\u00b6\n\n\nStep One \u2013 clone the SCION repository\n\u00b6\n\n\nAfter the Go workspace has been configured, we can checkout the SCION repository from github.com with all dependencies using the following commands:\n\n\nmkdir -p \n\"\n$GOPATH\n/src/github.com/netsec-ethz\"\n\n\ncd\n \n\"\n$GOPATH\n/src/github.com/netsec-ethz\"\n\ngit clone --recursive -b scionlab git@github.com:netsec-ethz/scion\n\n\n\n\n\n\n\nTroubleshooting\n\n\nIf the machine doesn't have generated SSH keys or the SSH keys are not assigned to the github account, the checkout will fail with the error \nPermission denied (publickey)\n. There are two ways to resolve this problem:\n\n\n\n\nChanging the checkout using ssh to https:\n\ngit config --global url.https://github.com/.insteadOf git@github.com:\n\n\nAssign SSH keys to Github account, detailed instruction can be found on \nGithub help\n\n\n\n\n\n\nThis will clone SCION and resolve dependencies in the appropriate directory in the Go workspace. It is necessary to navigate to the newly downloaded repository for finishing the configuration:\n\n\ncd\n \n$GOPATH\n/src/github.com/netsec-ethz/scion\n\n\n\n\n\nStep Two \u2013 finish installing the required packages\n\u00b6\n\n\nIn order to instal dependencies, simply issue the following command while in the root directory of the SCION installation:\n\n\n./env/deps\n\n\n\n\n\nThis will finish installing the required dependencies and system packages.\n\n\nStep Three \u2013 configure the host Zookeeper instance\n\u00b6\n\n\nReplacing \n/etc/zookeeper/conf/zoo.cfg\n with the file \ndocker/zoo.cfg\n is recommended. This has the standard parameters set, as well as using a ram disk for the data log, which greatly improves the performance of Zookeeper (at the cost of reliability, so it should only be done in a testing environment).\n\n\ncp docker/zoo.cfg /etc/zookeeper/conf/zoo.cfg\n\n\n\n\n\nNext steps\n\u00b6\n\n\nAfter finishing the installation of SCION, there are different ways of running different topologies. The following tutorials will cover this in further detail:\n\n\n\n\nRunning a local network topology\n \u2013 Generate a sample topology and run SCION locally\n\n\nConnecting to SCIONLab with a static public IP address\n \u2013 Connect to the already running SCION topology\n\n\nConnecting to SCIONLab without a static public IP address\n \u2013 Connect to the already running SCION topology through an OpenVPN tunnel",
            "title": "Ubuntu 16.04 x86-64"
        },
        {
            "location": "/native_setup/ubuntu_x86_build/#building-scion-on-ubuntu-1604-x86-64",
            "text": "",
            "title": "Building SCION on Ubuntu 16.04 x86-64"
        },
        {
            "location": "/native_setup/ubuntu_x86_build/#introduction",
            "text": "This tutorial will guide you through the steps required to install SCION on Ubuntu 16.04. This also includes the steps required to install the necessary packages. For details on how to build SCION on a Raspberry Pi, please take a look at  how to build SCION on a Raspberry Pi .",
            "title": "Introduction"
        },
        {
            "location": "/native_setup/ubuntu_x86_build/#prerequisites",
            "text": "The following steps will guide you through the installation of the tools necessary for running SCION.   Tip  You can skip prerequisites if you have your Go workspaces already configured on your machine.",
            "title": "Prerequisites"
        },
        {
            "location": "/native_setup/ubuntu_x86_build/#step-one-install-go",
            "text": "In order to run SCION, you must have Go version 1.8.x installed. Download  Go tools  and extract them in  /usr/local  with the following command (with root permissions):  tar -C /usr/local -xzf go1.8.5.linux-amd64.tar.gz  Then, add the newly extracted binaries to  $PATH :  echo   'PATH=$PATH:/usr/local/go/bin'  >> ~/.profile source  ~/.profile  Test your Go installation with the following command:  go version  The output should be  go version go1.8.5 linux/amd64 .",
            "title": "Step One &ndash; install Go"
        },
        {
            "location": "/native_setup/ubuntu_x86_build/#step-two-configure-your-go-workspace",
            "text": "After the installation of Go tools, it is necessary to set up your  Go workspace . The following commands will create a default workspace at  ~/go  and export it as the  $GOPATH  environment variable:  echo   'export GOPATH=\"$HOME/go\"'  >> ~/.profile source  ~/.profile\nmkdir -p  \" $GOPATH /bin\"  echo   'PATH=$PATH:$GOPATH/bin'  >> ~/.profile source  ~/.profile",
            "title": "Step Two &ndash; configure your Go workspace"
        },
        {
            "location": "/native_setup/ubuntu_x86_build/#scion-installation",
            "text": "",
            "title": "SCION installation"
        },
        {
            "location": "/native_setup/ubuntu_x86_build/#step-one-clone-the-scion-repository",
            "text": "After the Go workspace has been configured, we can checkout the SCION repository from github.com with all dependencies using the following commands:  mkdir -p  \" $GOPATH /src/github.com/netsec-ethz\"  cd   \" $GOPATH /src/github.com/netsec-ethz\" \ngit clone --recursive -b scionlab git@github.com:netsec-ethz/scion   Troubleshooting  If the machine doesn't have generated SSH keys or the SSH keys are not assigned to the github account, the checkout will fail with the error  Permission denied (publickey) . There are two ways to resolve this problem:   Changing the checkout using ssh to https: git config --global url.https://github.com/.insteadOf git@github.com:  Assign SSH keys to Github account, detailed instruction can be found on  Github help    This will clone SCION and resolve dependencies in the appropriate directory in the Go workspace. It is necessary to navigate to the newly downloaded repository for finishing the configuration:  cd   $GOPATH /src/github.com/netsec-ethz/scion",
            "title": "Step One &ndash; clone the SCION repository"
        },
        {
            "location": "/native_setup/ubuntu_x86_build/#step-two-finish-installing-the-required-packages",
            "text": "In order to instal dependencies, simply issue the following command while in the root directory of the SCION installation:  ./env/deps  This will finish installing the required dependencies and system packages.",
            "title": "Step Two &ndash; finish installing the required packages"
        },
        {
            "location": "/native_setup/ubuntu_x86_build/#step-three-configure-the-host-zookeeper-instance",
            "text": "Replacing  /etc/zookeeper/conf/zoo.cfg  with the file  docker/zoo.cfg  is recommended. This has the standard parameters set, as well as using a ram disk for the data log, which greatly improves the performance of Zookeeper (at the cost of reliability, so it should only be done in a testing environment).  cp docker/zoo.cfg /etc/zookeeper/conf/zoo.cfg",
            "title": "Step Three &ndash; configure the host Zookeeper instance"
        },
        {
            "location": "/native_setup/ubuntu_x86_build/#next-steps",
            "text": "After finishing the installation of SCION, there are different ways of running different topologies. The following tutorials will cover this in further detail:   Running a local network topology  \u2013 Generate a sample topology and run SCION locally  Connecting to SCIONLab with a static public IP address  \u2013 Connect to the already running SCION topology  Connecting to SCIONLab without a static public IP address  \u2013 Connect to the already running SCION topology through an OpenVPN tunnel",
            "title": "Next steps"
        },
        {
            "location": "/native_setup/rpi_raspbian/",
            "text": "Building SCION for a Raspberry Pi \u2013 Raspbian\n\u00b6\n\n\nIntroduction\n\u00b6\n\n\nThe SCION infrastructure can also be run on IoT devices like a Raspberry Pi. Building SCION for a Raspberry Pi is similar to the \nregular x86 build\n, although there are a few additional steps required to make everything work.\n\n\nPrerequisites\n\u00b6\n\n\nIn this tutorial, we assume that you already have a Raspberry Pi running Raspbian. In order to install Raspbian, please follow the \ninstallation guide\n.\n\n\n\n\nUpdate packages to latest version\n\n\nIt is recommended to update all packages before starting the installation process of SCION:\n\n\nsudo apt update && sudo apt upgrade\n\n\n\n\nInstall necessary tools\n\u00b6\n\n\nInstall necessary packages\n\u00b6\n\n\nsudo apt install git openvpn\n\n\n\n\n\nInstall Go\n\u00b6\n\n\nIn order to run SCION, Go version \n1.8.x\n is required. You can download and install go with following commands:\n\n\nwget https://storage.googleapis.com/golang/go1.8.5.linux-armv6l.tar.gz\nsudo tar -C /usr/local -xzf go1.8.5.linux-armv6l.tar.gz\n\n\necho\n \n'PATH=$PATH:/usr/local/go/bin'\n >> ~/.profile\n\nsource\n ~/.profile\n\n\n\n\n\nConfigure Go workspace\n\u00b6\n\n\nAfter the installation of Go tools, it is necessary to create a go workspace with the following commands:\n\n\necho\n \n'export GOPATH=\"$HOME/go\"'\n >> ~/.profile\n\nsource\n ~/.profile\nmkdir -p \n\"\n$GOPATH\n/bin\"\n\n\necho\n \n'PATH=$PATH:$GOPATH/bin'\n >> ~/.profile\n\nsource\n ~/.profile\n\n\n\n\n\nInstall SCION\n\u00b6\n\n\nmkdir -p \n\"\n$GOPATH\n/src/github.com/netsec-ethz\"\n\n\ncd\n \n\"\n$GOPATH\n/src/github.com/netsec-ethz\"\n\n\ngit clone --recursive -b scionlab git@github.com:netsec-ethz/scion\n\ncd\n scion\n\n\n\n\n\n\n\nTroubleshooting\n\n\nIf the machine doesn't have generated SSH keys or the SSH keys are not assigned to a github account, the checkout will fail with the error \nPermission denied (publickey)\n. There are two ways to resolve this problem:\n\n\n\n\nChanging the checkout using ssh to https:\n\ngit config --global url.https://github.com/.insteadOf git@github.com:\n\n\nAssign SSH keys to Github account, detailed instruction can be found on \nGithub help\n\n\n\n\n\n\ngit checkout -b arm-modified\nwget https://gist.githubusercontent.com/FR4NK-W/cc6661f420fe5e9805d5b9cdb9c41b1b/raw/7dc3b60b86b4c148c2706e3da82eee8d557bbd45/patches_checksum_bench.patch\nwget https://gist.githubusercontent.com/FR4NK-W/fb7a4b171ab3d5121b6492b9b664fd47/raw/ddeeb8f2337c64f027955e070df6ef34ff26bf9a/patches_dispatcher.patch\n\npatch ./c/lib/scion/checksum_bench.c ./patches_checksum_bench.patch\nrm c/lib/scion/checksum_bench.c.orig\npatch ./c/dispatcher/dispatcher.c ./patches_dispatcher.patch\nrm c/dispatcher/dispatcher.c.orig\n\n\n\n\n\ngit commit -am \n\"Modified to compile on ARM systems\"\n\nbash -c \n'yes | GO_INSTALL=true ./env/deps'\n\n\n\n\n\n\nsudo cp docker/zoo.cfg /etc/zookeeper/conf/zoo.cfg\n./scion.sh build",
            "title": "Raspberry PI &ndash; Raspbian"
        },
        {
            "location": "/native_setup/rpi_raspbian/#building-scion-for-a-raspberry-pi-raspbian",
            "text": "",
            "title": "Building SCION for a Raspberry Pi &ndash; Raspbian"
        },
        {
            "location": "/native_setup/rpi_raspbian/#introduction",
            "text": "The SCION infrastructure can also be run on IoT devices like a Raspberry Pi. Building SCION for a Raspberry Pi is similar to the  regular x86 build , although there are a few additional steps required to make everything work.",
            "title": "Introduction"
        },
        {
            "location": "/native_setup/rpi_raspbian/#prerequisites",
            "text": "In this tutorial, we assume that you already have a Raspberry Pi running Raspbian. In order to install Raspbian, please follow the  installation guide .   Update packages to latest version  It is recommended to update all packages before starting the installation process of SCION:  sudo apt update && sudo apt upgrade",
            "title": "Prerequisites"
        },
        {
            "location": "/native_setup/rpi_raspbian/#install-necessary-tools",
            "text": "",
            "title": "Install necessary tools"
        },
        {
            "location": "/native_setup/rpi_raspbian/#install-necessary-packages",
            "text": "sudo apt install git openvpn",
            "title": "Install necessary packages"
        },
        {
            "location": "/native_setup/rpi_raspbian/#install-go",
            "text": "In order to run SCION, Go version  1.8.x  is required. You can download and install go with following commands:  wget https://storage.googleapis.com/golang/go1.8.5.linux-armv6l.tar.gz\nsudo tar -C /usr/local -xzf go1.8.5.linux-armv6l.tar.gz echo   'PATH=$PATH:/usr/local/go/bin'  >> ~/.profile source  ~/.profile",
            "title": "Install Go"
        },
        {
            "location": "/native_setup/rpi_raspbian/#configure-go-workspace",
            "text": "After the installation of Go tools, it is necessary to create a go workspace with the following commands:  echo   'export GOPATH=\"$HOME/go\"'  >> ~/.profile source  ~/.profile\nmkdir -p  \" $GOPATH /bin\"  echo   'PATH=$PATH:$GOPATH/bin'  >> ~/.profile source  ~/.profile",
            "title": "Configure Go workspace"
        },
        {
            "location": "/native_setup/rpi_raspbian/#install-scion",
            "text": "mkdir -p  \" $GOPATH /src/github.com/netsec-ethz\"  cd   \" $GOPATH /src/github.com/netsec-ethz\" \n\ngit clone --recursive -b scionlab git@github.com:netsec-ethz/scion cd  scion   Troubleshooting  If the machine doesn't have generated SSH keys or the SSH keys are not assigned to a github account, the checkout will fail with the error  Permission denied (publickey) . There are two ways to resolve this problem:   Changing the checkout using ssh to https: git config --global url.https://github.com/.insteadOf git@github.com:  Assign SSH keys to Github account, detailed instruction can be found on  Github help    git checkout -b arm-modified\nwget https://gist.githubusercontent.com/FR4NK-W/cc6661f420fe5e9805d5b9cdb9c41b1b/raw/7dc3b60b86b4c148c2706e3da82eee8d557bbd45/patches_checksum_bench.patch\nwget https://gist.githubusercontent.com/FR4NK-W/fb7a4b171ab3d5121b6492b9b664fd47/raw/ddeeb8f2337c64f027955e070df6ef34ff26bf9a/patches_dispatcher.patch\n\npatch ./c/lib/scion/checksum_bench.c ./patches_checksum_bench.patch\nrm c/lib/scion/checksum_bench.c.orig\npatch ./c/dispatcher/dispatcher.c ./patches_dispatcher.patch\nrm c/dispatcher/dispatcher.c.orig  git commit -am  \"Modified to compile on ARM systems\" \nbash -c  'yes | GO_INSTALL=true ./env/deps'   sudo cp docker/zoo.cfg /etc/zookeeper/conf/zoo.cfg\n./scion.sh build",
            "title": "Install SCION"
        },
        {
            "location": "/virtual_machine_setup/dynamic_ip/",
            "text": "Running SCION in a virtual machine \u2013 VPN approach\n\u00b6\n\n\nIntroduction\n\u00b6\n\n\nThis tutorial will guide you through the steps required to run the SCION infrastructure in a virtual machine. This tutorial assumes that you don't have a static public IP address or cannot receive traffic on UDP port 50000 from the outside network, and therefore it will use OpenVPN to proxy traffic.\n\n\n\n\nTip\n\n\nIf you have a static public IP address and you can receive traffic on UDP port 50000, you should consider \nrunning the VM without VPN\n.\n\n\n\n\nPrerequisites\n\u00b6\n\n\nRunning SCION in a virtual machine requires VirtualBox and Vagrant to be installed on your system.\n\n\nStep One \u2013 install VirtualBox\n\u00b6\n\n\nTo install VirtualBox, follow the steps on the \nVirtualBox download page\n for your system. On Ubuntu or similar Linux distributions, you could also install VirtualBox using your packet manager:\n\n\napt-get install virtualbox\n\n\n\n\n\nStep Two \u2013 install Vagrant\n\u00b6\n\n\nTo install Vagrant, follow the steps on the \nVagrant download page\n for your system. Also, on Ubuntu you could install it via your packet manager:\n\n\napt-get install vagrant\n\n\n\n\n\nRunning SCION\n\u00b6\n\n\nRunning SCION consists of several steps, registering a SCION VM on \nSCIONLab Coordination Service\n, deploying the VM, and running the SCION infrastructure.\n\n\nStep One \u2013 download a SCION VM\n\u00b6\n\n\nIn order to download a VM, you must login to \nSCIONLab Coordination Service\n. In case you don't have an account, follow registration process.\n\n\nAfter successfully logging in, download a VM configuration by clicking on \nCreate and Download SCIONLab VM Configuration\n as presented in the image below:\n\n\n\n\nStep Two \u2013 create and run the VM\n\u00b6\n\n\nWhen the configuration finishes downloading, extract the archive content in a separate directory. On a Linux system, simply running \ntar\n command will extract the contents in a separate subdirectory named as your email:\n\n\ntar -xvf scion_lab_*.tar.gz\n\n\n\n\n\nAfter extracting the newly downloaded content, navigate to the extracted directory. It should have the following structure:\n\n\n\u251c\u2500\u2500 client.conf\n\u251c\u2500\u2500 gen\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 dispatcher\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 dispatcher.zlog.conf\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 supervisord.conf\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 ISD1\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 AS1029\n\u2502           \u2514 ...\n\u2502\n\u251c\u2500\u2500 README\n\u251c\u2500\u2500 run.sh\n\u2514\u2500\u2500 Vagrantfile\n\n\n\n\n\nVerifying that structure is the same and begin setup by running:\n\n\nvagrant box add scion/ubuntu-16.04-64-scion\nvagrant box update\nvagrant up\n\n\n\n\n\nYou will be asked for your password. The installation process will take around 10 minutes.\n\n\nStep Three \u2013 run the SCION infrastructure\n\u00b6\n\n\nAfter successful installation of VM, you will be automatically ssh'ed into machine.\n\n\nTo run SCION you should navigate to source directory start infrastructure with following commands:\n\n\nvagrant ssh\n\n\n\n\n\nThe SCION infrastructure is automatically startet at boot time of your VM. You can control it using the \nscion.sh\n script located at \n~/go/src/github.com/netsec-ethz/scion/\n.\n\n\nNext steps\n\u00b6\n\n\nAfter running SCION infrastructure it is necessary to verify that its running properly. This is covered in tutorial \nVerifying SCION Installation",
            "title": "Virtual machine via VPN"
        },
        {
            "location": "/virtual_machine_setup/dynamic_ip/#running-scion-in-a-virtual-machine-vpn-approach",
            "text": "",
            "title": "Running SCION in a virtual machine &ndash; VPN approach"
        },
        {
            "location": "/virtual_machine_setup/dynamic_ip/#introduction",
            "text": "This tutorial will guide you through the steps required to run the SCION infrastructure in a virtual machine. This tutorial assumes that you don't have a static public IP address or cannot receive traffic on UDP port 50000 from the outside network, and therefore it will use OpenVPN to proxy traffic.   Tip  If you have a static public IP address and you can receive traffic on UDP port 50000, you should consider  running the VM without VPN .",
            "title": "Introduction"
        },
        {
            "location": "/virtual_machine_setup/dynamic_ip/#prerequisites",
            "text": "Running SCION in a virtual machine requires VirtualBox and Vagrant to be installed on your system.",
            "title": "Prerequisites"
        },
        {
            "location": "/virtual_machine_setup/dynamic_ip/#step-one-install-virtualbox",
            "text": "To install VirtualBox, follow the steps on the  VirtualBox download page  for your system. On Ubuntu or similar Linux distributions, you could also install VirtualBox using your packet manager:  apt-get install virtualbox",
            "title": "Step One &ndash; install VirtualBox"
        },
        {
            "location": "/virtual_machine_setup/dynamic_ip/#step-two-install-vagrant",
            "text": "To install Vagrant, follow the steps on the  Vagrant download page  for your system. Also, on Ubuntu you could install it via your packet manager:  apt-get install vagrant",
            "title": "Step Two &ndash; install Vagrant"
        },
        {
            "location": "/virtual_machine_setup/dynamic_ip/#running-scion",
            "text": "Running SCION consists of several steps, registering a SCION VM on  SCIONLab Coordination Service , deploying the VM, and running the SCION infrastructure.",
            "title": "Running SCION"
        },
        {
            "location": "/virtual_machine_setup/dynamic_ip/#step-one-download-a-scion-vm",
            "text": "In order to download a VM, you must login to  SCIONLab Coordination Service . In case you don't have an account, follow registration process.  After successfully logging in, download a VM configuration by clicking on  Create and Download SCIONLab VM Configuration  as presented in the image below:",
            "title": "Step One &ndash; download a SCION VM"
        },
        {
            "location": "/virtual_machine_setup/dynamic_ip/#step-two-create-and-run-the-vm",
            "text": "When the configuration finishes downloading, extract the archive content in a separate directory. On a Linux system, simply running  tar  command will extract the contents in a separate subdirectory named as your email:  tar -xvf scion_lab_*.tar.gz  After extracting the newly downloaded content, navigate to the extracted directory. It should have the following structure:  \u251c\u2500\u2500 client.conf\n\u251c\u2500\u2500 gen\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 dispatcher\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 dispatcher.zlog.conf\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 supervisord.conf\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 ISD1\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 AS1029\n\u2502           \u2514 ...\n\u2502\n\u251c\u2500\u2500 README\n\u251c\u2500\u2500 run.sh\n\u2514\u2500\u2500 Vagrantfile  Verifying that structure is the same and begin setup by running:  vagrant box add scion/ubuntu-16.04-64-scion\nvagrant box update\nvagrant up  You will be asked for your password. The installation process will take around 10 minutes.",
            "title": "Step Two &ndash; create and run the VM"
        },
        {
            "location": "/virtual_machine_setup/dynamic_ip/#step-three-run-the-scion-infrastructure",
            "text": "After successful installation of VM, you will be automatically ssh'ed into machine.  To run SCION you should navigate to source directory start infrastructure with following commands:  vagrant ssh  The SCION infrastructure is automatically startet at boot time of your VM. You can control it using the  scion.sh  script located at  ~/go/src/github.com/netsec-ethz/scion/ .",
            "title": "Step Three &ndash; run the SCION infrastructure"
        },
        {
            "location": "/virtual_machine_setup/dynamic_ip/#next-steps",
            "text": "After running SCION infrastructure it is necessary to verify that its running properly. This is covered in tutorial  Verifying SCION Installation",
            "title": "Next steps"
        },
        {
            "location": "/virtual_machine_setup/static_ip/",
            "text": "Running SCION in a virtual machine \u2013 static public IP address\n\u00b6\n\n\n\n\nWarning\n\n\nIf you \ndo not\n have a static public IP address or you cannot receive traffic on UDP port 50000, you should instead \nconnect to the SCION network via VPN\n.\n\n\n\n\nSimply follow all the steps in the \ntutorial for a vpn-based setup\n until \nStep One \u2013 download a SCION VM\n\n\nThere, instead of directly clicking on \nCreate and Download SCIONLab VM Configuration\n, first select \nMy host has a static public IP address and can receive traffic at port 50000.\n and enter your host's public IP address in the input field.\n\n\nAfterwards, follow all subsequent steps in the \ntutorial for a vpn-based setup\n.\n\n\n\n\nTroubleshooting\n\n\nMake sure that your router properly forwards UDP port 50000 to the machine where the SCION VM is running.",
            "title": "Virtual machine with static public IP"
        },
        {
            "location": "/virtual_machine_setup/static_ip/#running-scion-in-a-virtual-machine-static-public-ip-address",
            "text": "Warning  If you  do not  have a static public IP address or you cannot receive traffic on UDP port 50000, you should instead  connect to the SCION network via VPN .   Simply follow all the steps in the  tutorial for a vpn-based setup  until  Step One \u2013 download a SCION VM  There, instead of directly clicking on  Create and Download SCIONLab VM Configuration , first select  My host has a static public IP address and can receive traffic at port 50000.  and enter your host's public IP address in the input field.  Afterwards, follow all subsequent steps in the  tutorial for a vpn-based setup .   Troubleshooting  Make sure that your router properly forwards UDP port 50000 to the machine where the SCION VM is running.",
            "title": "Running SCION in a virtual machine &ndash; static public IP address"
        },
        {
            "location": "/general_scion_configuration/verifying_scion_installation/",
            "text": "Verifying SCION installation\n\u00b6\n\n\nIntroduction\n\u00b6\n\n\nAfter running your SCION infrastructure, it is necessary to verify tha it is working correctly.\n\n\nThere are several methods of doing this. Some of them are described in this post.\n\n\nRunning SCION-viz\n\u00b6\n\n\nThe recommended way of verifying a correct SCION infrastructure deployment is running the visualization tool \nSCION-viz\n\n\nInspecting log files\n\u00b6\n\n\nThe SCION log files can be accessed with the following command:\n\n\ntail -f \n$GOPATH\n/src/github.com/netsec-ethz/scion/logs/bs*.DEBUG\n\n\n\n\n\nWhat to look for?\n\u00b6\n\n\nTBA\n\n\n\n\nTip\n\n\nIf you are running the SCION virtual machine image, you can display the logs by running:\n\n\ncheckbeacons\n\n\nfrom any directory",
            "title": "Verifying the installation"
        },
        {
            "location": "/general_scion_configuration/verifying_scion_installation/#verifying-scion-installation",
            "text": "",
            "title": "Verifying SCION installation"
        },
        {
            "location": "/general_scion_configuration/verifying_scion_installation/#introduction",
            "text": "After running your SCION infrastructure, it is necessary to verify tha it is working correctly.  There are several methods of doing this. Some of them are described in this post.",
            "title": "Introduction"
        },
        {
            "location": "/general_scion_configuration/verifying_scion_installation/#running-scion-viz",
            "text": "The recommended way of verifying a correct SCION infrastructure deployment is running the visualization tool  SCION-viz",
            "title": "Running SCION-viz"
        },
        {
            "location": "/general_scion_configuration/verifying_scion_installation/#inspecting-log-files",
            "text": "The SCION log files can be accessed with the following command:  tail -f  $GOPATH /src/github.com/netsec-ethz/scion/logs/bs*.DEBUG",
            "title": "Inspecting log files"
        },
        {
            "location": "/general_scion_configuration/verifying_scion_installation/#what-to-look-for",
            "text": "TBA   Tip  If you are running the SCION virtual machine image, you can display the logs by running:  checkbeacons  from any directory",
            "title": "What to look for?"
        },
        {
            "location": "/general_scion_configuration/local_top/",
            "text": "Running the SCION infrastructure on a local topology\n\u00b6\n\n\nIntroduction\n\u00b6\n\n\nThis tutorial will guide you through the steps required to generate a local topology and run SCION.\n\n\nPrerequisites\n\u00b6\n\n\nThis tutorial assumes that SCION is already installed on your system. If this is not the case, please follow \nHow to build SCION on Ubuntu 16.04 x86-64\n.\n\n\nTopology\n\u00b6\n\n\nBefore continuing with the following steps, you should first navigate to the SCION root directory:\n\n\ncd\n \n$GOPATH\n/src/github.com/netsec-ethz/scion\n\n\n\n\n\nThe SCION installation comes with a command to generate the default local topology. The topology is defined in the directory \ntopology\n and it is depicted in the following figure.\n\n\n\n\nTo generate the default topology, it is sufficient to run\n\n\n./scion.sh topology\n\n\n\n\n\nThis command will generate the topology information in the \ngen\n directory. The structure of the \ngen\n directory will be:\n\n\n ./gen/ISD{X}/AS{Y}/\n     {elem}{X}-{Y}-{Z}/\n         as.yml\n         path_policy.yml\n         supervisord.conf\n         topology.yml\n         certs/\n             ISD{X}-AS{Y}-V0.crt\n             ISD{X}-V0.trc\n         keys/\n             as-sig.key\n\n\n\n\n\n This command will delete any previous \ngen\n directory. Make sure to back it up before, if necessary! \n\n\nSome notes about the topology definition in \ntopology/Default.topo\n\n\n\n\n\n\ndefaults.subnet\n (optional): override the default subnet of \n127.0.0.0/8\n.\n\n\n\n\n\n\ncore\n (optional): specify if this is a core AS or not (defaults to 'false').\n\n\n\n\n\n\nbeacon_servers\n, \ncertificate_servers\n, \npath_servers\n, (all optional):\n  number of such servers in a specific AS (override the default value 1).\n\n\n\n\n\n\nlinks\n: keys are \nISD_ID-AS_ID\n (format also used for the keys of the JSON\n  file itself) and values can either be \nPARENT\n, \nCHILD\n, \nPEER\n, or\n  \nCORE\n.\n\n\n\n\n\n\nRunning SCION\n\u00b6\n\n\nRunning the SCION infrastructure:\n\n\n./scion.sh run\n\n\n\n\n\nStopping the SCION infrastructure:\n\n\n./scion.sh stop\n\n\n\n\n\nTesting the infrastructure:\n\n\n./scion.sh \ntest\n\n\n\n\n\n\nNext steps\n\u00b6\n\n\nAfter running the SCION infrastructure, it is necessary to verify that it is running properly. This is covered in the tutorial \nVerifying SCION Installation",
            "title": "Running SCION on a local topology"
        },
        {
            "location": "/general_scion_configuration/local_top/#running-the-scion-infrastructure-on-a-local-topology",
            "text": "",
            "title": "Running the SCION infrastructure on a local topology"
        },
        {
            "location": "/general_scion_configuration/local_top/#introduction",
            "text": "This tutorial will guide you through the steps required to generate a local topology and run SCION.",
            "title": "Introduction"
        },
        {
            "location": "/general_scion_configuration/local_top/#prerequisites",
            "text": "This tutorial assumes that SCION is already installed on your system. If this is not the case, please follow  How to build SCION on Ubuntu 16.04 x86-64 .",
            "title": "Prerequisites"
        },
        {
            "location": "/general_scion_configuration/local_top/#topology",
            "text": "Before continuing with the following steps, you should first navigate to the SCION root directory:  cd   $GOPATH /src/github.com/netsec-ethz/scion  The SCION installation comes with a command to generate the default local topology. The topology is defined in the directory  topology  and it is depicted in the following figure.   To generate the default topology, it is sufficient to run  ./scion.sh topology  This command will generate the topology information in the  gen  directory. The structure of the  gen  directory will be:   ./gen/ISD{X}/AS{Y}/\n     {elem}{X}-{Y}-{Z}/\n         as.yml\n         path_policy.yml\n         supervisord.conf\n         topology.yml\n         certs/\n             ISD{X}-AS{Y}-V0.crt\n             ISD{X}-V0.trc\n         keys/\n             as-sig.key   This command will delete any previous  gen  directory. Make sure to back it up before, if necessary!   Some notes about the topology definition in  topology/Default.topo    defaults.subnet  (optional): override the default subnet of  127.0.0.0/8 .    core  (optional): specify if this is a core AS or not (defaults to 'false').    beacon_servers ,  certificate_servers ,  path_servers , (all optional):\n  number of such servers in a specific AS (override the default value 1).    links : keys are  ISD_ID-AS_ID  (format also used for the keys of the JSON\n  file itself) and values can either be  PARENT ,  CHILD ,  PEER , or\n   CORE .",
            "title": "Topology"
        },
        {
            "location": "/general_scion_configuration/local_top/#running-scion",
            "text": "Running the SCION infrastructure:  ./scion.sh run  Stopping the SCION infrastructure:  ./scion.sh stop  Testing the infrastructure:  ./scion.sh  test",
            "title": "Running SCION"
        },
        {
            "location": "/general_scion_configuration/local_top/#next-steps",
            "text": "After running the SCION infrastructure, it is necessary to verify that it is running properly. This is covered in the tutorial  Verifying SCION Installation",
            "title": "Next steps"
        },
        {
            "location": "/general_scion_configuration/public_ip/",
            "text": "Connecting to SCIONLab with a static public IP address\n\u00b6\n\n\nTBA",
            "title": "Set up an AS and connect to the SCION network"
        },
        {
            "location": "/general_scion_configuration/public_ip/#connecting-to-scionlab-with-a-static-public-ip-address",
            "text": "TBA",
            "title": "Connecting to SCIONLab with a static public IP address"
        },
        {
            "location": "/general_scion_configuration/vpn_setup/",
            "text": "Connecting to SCIONLab via VPN\n\u00b6\n\n\nTBA",
            "title": "Connect to the SCION network via VPN"
        },
        {
            "location": "/general_scion_configuration/vpn_setup/#connecting-to-scionlab-via-vpn",
            "text": "TBA",
            "title": "Connecting to SCIONLab via VPN"
        },
        {
            "location": "/general_scion_configuration/vpn_setup/",
            "text": "Connecting to SCIONLab via VPN\n\u00b6\n\n\nTBA",
            "title": "Set up an endhost and connect to a local AS"
        },
        {
            "location": "/general_scion_configuration/vpn_setup/#connecting-to-scionlab-via-vpn",
            "text": "TBA",
            "title": "Connecting to SCIONLab via VPN"
        },
        {
            "location": "/general_scion_configuration/scion_viz/",
            "text": "Installing and running SCION-viz\n\u00b6\n\n\nIntroduction\n\u00b6\n\n\nSCION-viz is a web-based visualization tool of the SCION topology. Connecting to a running infrastructure instance, it reads necessary information about the network topology.\n\n\nPrerequisites\n\u00b6\n\n\nIn order to run SCION-viz, you must have your SCION infrastructure up and running.\n\n\n\n\nSCION VM setup\n\n\nIf you are using SCION VM, then SCION-viz is already installed and running as a service. You can access it over \nlocalhost:8000\n\nThis port is automatically forwarded inside the VM, so you can access SCION-viz from your normal host machine.\n\n\n\n\nSCION-viz uses libraries that are located in the \npython\n directory of the SCION repository. In order to make those libraries visible, we need to export the \nPYTHONPATH\n environment variable.\n\n\necho\n \n'export PYTHONPATH=\"$GOPATH/src/github.com/netsec-ethz/scion/python:$PYTHONPATH\"'\n >> ~/.profile\n\nsource\n ~/.profile\n\n\n\n\n\nInstallation\n\u00b6\n\n\nNavigate to the root SCION directory:\n\n\ncd\n \n$GOPATH\n/src/github.com/netsec-ethz/scion\n\n\n\n\n\nCheckout the project and install the dependencies:\n\n\ncd\n sub\ngit clone git@github.com:netsec-ethz/scion-viz\n\ncd\n scion-viz/python/web\npip3 install --user --require-hashes -r requirements.txt\npython3 ./manage.py migrate\n\n\n\n\n\nRunning\n\u00b6\n\n\nTo run SCION-viz:\n\n\npython3 ./manage.py runserver \n0\n.0.0.0:8000\n\n\n\n\n\nYou can replace the port (8000) by any other that suits your taste.\n\n\n\n\nTip\n\n\nMake sure that your SCION infrastructure is running in order to see meaningful results.\nIn particular, SCION-viz requires the \nsciond\n process to be running.\n\n\n\n\nTo verify that the setup is working correctly, visit \nlocalhost:8000\n. The result should be similar to the following:\n\n\n\n\nUsing SCION-viz\n\u00b6\n\n\nTBA",
            "title": "Visualization tool (SCION-viz)"
        },
        {
            "location": "/general_scion_configuration/scion_viz/#installing-and-running-scion-viz",
            "text": "",
            "title": "Installing and running SCION-viz"
        },
        {
            "location": "/general_scion_configuration/scion_viz/#introduction",
            "text": "SCION-viz is a web-based visualization tool of the SCION topology. Connecting to a running infrastructure instance, it reads necessary information about the network topology.",
            "title": "Introduction"
        },
        {
            "location": "/general_scion_configuration/scion_viz/#prerequisites",
            "text": "In order to run SCION-viz, you must have your SCION infrastructure up and running.   SCION VM setup  If you are using SCION VM, then SCION-viz is already installed and running as a service. You can access it over  localhost:8000 \nThis port is automatically forwarded inside the VM, so you can access SCION-viz from your normal host machine.   SCION-viz uses libraries that are located in the  python  directory of the SCION repository. In order to make those libraries visible, we need to export the  PYTHONPATH  environment variable.  echo   'export PYTHONPATH=\"$GOPATH/src/github.com/netsec-ethz/scion/python:$PYTHONPATH\"'  >> ~/.profile source  ~/.profile",
            "title": "Prerequisites"
        },
        {
            "location": "/general_scion_configuration/scion_viz/#installation",
            "text": "Navigate to the root SCION directory:  cd   $GOPATH /src/github.com/netsec-ethz/scion  Checkout the project and install the dependencies:  cd  sub\ngit clone git@github.com:netsec-ethz/scion-viz cd  scion-viz/python/web\npip3 install --user --require-hashes -r requirements.txt\npython3 ./manage.py migrate",
            "title": "Installation"
        },
        {
            "location": "/general_scion_configuration/scion_viz/#running",
            "text": "To run SCION-viz:  python3 ./manage.py runserver  0 .0.0.0:8000  You can replace the port (8000) by any other that suits your taste.   Tip  Make sure that your SCION infrastructure is running in order to see meaningful results.\nIn particular, SCION-viz requires the  sciond  process to be running.   To verify that the setup is working correctly, visit  localhost:8000 . The result should be similar to the following:",
            "title": "Running"
        },
        {
            "location": "/general_scion_configuration/scion_viz/#using-scion-viz",
            "text": "TBA",
            "title": "Using SCION-viz"
        },
        {
            "location": "/sample_projects/fetch_temperature/",
            "text": "Read temperature sensor over SCION network\n\u00b6\n\n\nTBA",
            "title": "Read a temperature sensor over the SCION network"
        },
        {
            "location": "/sample_projects/fetch_temperature/#read-temperature-sensor-over-scion-network",
            "text": "TBA",
            "title": "Read temperature sensor over SCION network"
        },
        {
            "location": "/sample_projects/access_camera/",
            "text": "Access video camera over SCION network\n\u00b6\n\n\nTBA",
            "title": "Access a video camera over the SCION network"
        },
        {
            "location": "/sample_projects/access_camera/#access-video-camera-over-scion-network",
            "text": "TBA",
            "title": "Access video camera over SCION network"
        },
        {
            "location": "/sample_projects/multipath/",
            "text": "Using multipath in SCION\n\u00b6\n\n\nTBA",
            "title": "Using multipath in SCION"
        },
        {
            "location": "/sample_projects/multipath/#using-multipath-in-scion",
            "text": "TBA",
            "title": "Using multipath in SCION"
        },
        {
            "location": "/general_scion_configuration/influence_path_selection/",
            "text": "Configuring path selection\n\u00b6\n\n\nTBA",
            "title": "Configuring path selection"
        },
        {
            "location": "/general_scion_configuration/influence_path_selection/#configuring-path-selection",
            "text": "TBA",
            "title": "Configuring path selection"
        },
        {
            "location": "/general_scion_configuration/setup_sig/",
            "text": "Configuring SCION IP Gateway\n\u00b6\n\n\nTBA",
            "title": "Configuring the SCION IP gateway"
        },
        {
            "location": "/general_scion_configuration/setup_sig/#configuring-scion-ip-gateway",
            "text": "TBA",
            "title": "Configuring SCION IP Gateway"
        },
        {
            "location": "/as_visualization/running_asviz/",
            "text": "Setup and Run AS Visualizations\n\u00b6\n\n\n1. Setup Local\n\u00b6\n\n\nIf you are using the ScionLab VM distribution you should skip this step. However, if you are installing the AS Visualization locally, you will need to clone a copy of the source.\n\n\ncd\n \n$GOHOME\n/src/github.com/netsec-ethz/scion/sub\ngit clone git@github.com:netsec-ethz/scion-viz\n\ncd\n scion-viz/python/web\npip3 install --user --require-hashes -r requirements.txt\npython3 ./manage.py migrate\n\n\n\n\n\n2. Source Update\n\u00b6\n\n\nThis step applies to all uses Local and ScionLab VM. Update the source for the \nscion\n and \nscion-viz\n repositories.\n\n\n./scion.sh stop\n./scion.sh clean\n\ncd\n \n$GOHOME\n/src/github.com/netsec-ethz/scion\ngit pull\n./scion.sh run\n\ncd\n sub/scion-viz\ngit pull\n\n\n\n\n\n3. Running\n\u00b6\n\n\ncd\n \n$GOHOME\n/src/github.com/netsec-ethz/scion/sub/scion-viz/python/web\npython3 ./manage.py runserver \n10\n.0.2.15:8000\n\n\n\n\n\n4. Using\n\u00b6\n\n\nThe AS Visualization can be used from the \nbrowser\n or from the \ncommand line\n.",
            "title": "Running AS Visualizations"
        },
        {
            "location": "/as_visualization/running_asviz/#setup-and-run-as-visualizations",
            "text": "",
            "title": "Setup and Run AS Visualizations"
        },
        {
            "location": "/as_visualization/running_asviz/#1-setup-local",
            "text": "If you are using the ScionLab VM distribution you should skip this step. However, if you are installing the AS Visualization locally, you will need to clone a copy of the source.  cd   $GOHOME /src/github.com/netsec-ethz/scion/sub\ngit clone git@github.com:netsec-ethz/scion-viz cd  scion-viz/python/web\npip3 install --user --require-hashes -r requirements.txt\npython3 ./manage.py migrate",
            "title": "1. Setup Local"
        },
        {
            "location": "/as_visualization/running_asviz/#2-source-update",
            "text": "This step applies to all uses Local and ScionLab VM. Update the source for the  scion  and  scion-viz  repositories.  ./scion.sh stop\n./scion.sh clean cd   $GOHOME /src/github.com/netsec-ethz/scion\ngit pull\n./scion.sh run cd  sub/scion-viz\ngit pull",
            "title": "2. Source Update"
        },
        {
            "location": "/as_visualization/running_asviz/#3-running",
            "text": "cd   $GOHOME /src/github.com/netsec-ethz/scion/sub/scion-viz/python/web\npython3 ./manage.py runserver  10 .0.2.15:8000",
            "title": "3. Running"
        },
        {
            "location": "/as_visualization/running_asviz/#4-using",
            "text": "The AS Visualization can be used from the  browser  or from the  command line .",
            "title": "4. Using"
        },
        {
            "location": "/as_visualization/browser_asviz/",
            "text": "Browser AS Visualizations\n\u00b6\n\n\nStarting the Visualization\n\u00b6\n\n\nAfter \nupdating the latest source code and starting the server\n, point your browser to \nhttp://127.0.0.1:8000\n to launch the AS Visualization.\nThen, enter the \"Source AS\" ISD-AS pair of the AS you wish to view data for.\nPress \"Request Data\" to get updated data.\n\n\nViewing the SCION Daemon\n\u00b6\n\n\nThe \"Data\" pull-down menu option \"sciond socket\" will bind to a socket to communicate with the SCION Daemon. Alternately, you can override the default IP address of the Daemon, buy entering the address you wish to bind to in the \"SCIOND IP Address\" text box.\n\n\nSCIOND Paths\n\u00b6\n\n\nEnter the \"Destination AS\" ISD-AS pair and the maximum number of paths to retrieve in \"Max Paths\" and press \"Update Paths\" to view all announced paths to the destination from the source.\nThe announced paths will be displayed in a combined topology in the window.\nTo view the details of a specific path expand the path's data by clicking on the path number in the window on right side.\n\n\n\nSCION AS Topology\n\u00b6\n\n\nThe composition of services and border routers for the Source AS will be displayed in the AS Topology tab. Click on any circle to view the details of that server or router.\n\n\n\n\nTip\n\n\nThe big circle can be clicked on as well to view details of the Source AS!\n\n\n\n\n\n\nViewing the SCION Local AS\n\u00b6\n\n\nThe \"Data\" pull-down menu option \"local gen dir\" will display data located in the locally generated directory and may be a very limited view of the SCION network.\n\n\nLocal AS Topology\n\u00b6\n\n\n\n\nLocal ISD Trust Root Configuration\n\u00b6\n\n\n\n\nLocal AS Certificate\n\u00b6",
            "title": "Browser AS Visualization"
        },
        {
            "location": "/as_visualization/browser_asviz/#browser-as-visualizations",
            "text": "",
            "title": "Browser AS Visualizations"
        },
        {
            "location": "/as_visualization/browser_asviz/#starting-the-visualization",
            "text": "After  updating the latest source code and starting the server , point your browser to  http://127.0.0.1:8000  to launch the AS Visualization.\nThen, enter the \"Source AS\" ISD-AS pair of the AS you wish to view data for.\nPress \"Request Data\" to get updated data.",
            "title": "Starting the Visualization"
        },
        {
            "location": "/as_visualization/browser_asviz/#viewing-the-scion-daemon",
            "text": "The \"Data\" pull-down menu option \"sciond socket\" will bind to a socket to communicate with the SCION Daemon. Alternately, you can override the default IP address of the Daemon, buy entering the address you wish to bind to in the \"SCIOND IP Address\" text box.",
            "title": "Viewing the SCION Daemon"
        },
        {
            "location": "/as_visualization/browser_asviz/#sciond-paths",
            "text": "Enter the \"Destination AS\" ISD-AS pair and the maximum number of paths to retrieve in \"Max Paths\" and press \"Update Paths\" to view all announced paths to the destination from the source.\nThe announced paths will be displayed in a combined topology in the window.\nTo view the details of a specific path expand the path's data by clicking on the path number in the window on right side.",
            "title": "SCIOND Paths"
        },
        {
            "location": "/as_visualization/browser_asviz/#scion-as-topology",
            "text": "The composition of services and border routers for the Source AS will be displayed in the AS Topology tab. Click on any circle to view the details of that server or router.   Tip  The big circle can be clicked on as well to view details of the Source AS!",
            "title": "SCION AS Topology"
        },
        {
            "location": "/as_visualization/browser_asviz/#viewing-the-scion-local-as",
            "text": "The \"Data\" pull-down menu option \"local gen dir\" will display data located in the locally generated directory and may be a very limited view of the SCION network.",
            "title": "Viewing the SCION Local AS"
        },
        {
            "location": "/as_visualization/browser_asviz/#local-as-topology",
            "text": "",
            "title": "Local AS Topology"
        },
        {
            "location": "/as_visualization/browser_asviz/#local-isd-trust-root-configuration",
            "text": "",
            "title": "Local ISD Trust Root Configuration"
        },
        {
            "location": "/as_visualization/browser_asviz/#local-as-certificate",
            "text": "",
            "title": "Local AS Certificate"
        },
        {
            "location": "/as_visualization/command_asviz/",
            "text": "Command-line AS Visualization\n\u00b6\n\n\ncd\n ~/go/src/github.com/netsec-ethz/scion/\n\n\n\n\n\npython3 sub/scion-viz/python/as_viewer.py\nusage: as_viewer.py \n[\n-h\n]\n \n[\n--addr ADDR\n]\n \n[\n-t\n]\n \n[\n-p\n]\n \n[\n-trc\n]\n \n[\n-crt\n]\n \n[\n-c\n]\n \n[\n-pp\n]\n\n                    src_isdas \n[\ndst_isdas\n]\n\nas_viewer.py: error: the following arguments are required: src_isdas\n\n\n\n\n\npython3 sub/scion-viz/python/as_viewer.py -h\nusage: as_viewer.py \n[\n-h\n]\n \n[\n--addr ADDR\n]\n \n[\n-t\n]\n \n[\n-p\n]\n \n[\n-trc\n]\n \n[\n-crt\n]\n \n[\n-c\n]\n \n[\n-pp\n]\n\n                    src_isdas \n[\ndst_isdas\n]\n\n\nSCION AS Path Viewer requires \nsource\n and destination ISD-ASes to analyze.\n\npositional arguments:\n  src_isdas    ISD-AS source.\n  dst_isdas    ISD-AS destination.\n\noptional arguments:\n  -h, --help   show this \nhelp\n message and \nexit\n\n  --addr ADDR  ip address to \nbind\n to \nif\n not localhost\n  -t           display \nsource\n AS topology\n  -p           display announced paths to destination\n  -trc         display \nsource\n TRC\n  -crt         display \nsource\n certificate chain\n  -c           display \nsource\n AS configuration\n  -pp          display \nsource\n path policy\n\n\n\n\n\npython3 sub/scion-viz/python/as_viewer.py \n1\n-1045 -t\n\nSCION AS Viewer\n\n(\nsrc\n)\n \n1\n-1045 \n=======================\n> None \n(\ndst\n)\n\n/run/shm/sciond/sd1-1045.sock\nStarting sciond at /run/shm/sciond/sd1-1045.sock\n----------------- AS TOPOLOGY: \n1\n-1045\nis_core_as: False\nmtu: \n1472\n\n----------------- PATH SERVER:\nAddress: \n10\n.0.2.15\nName: ps-1\nPort: \n31044\n\nTTL: \n0\n\n----------------- CERTIFICATE SERVER:\nAddress: \n10\n.0.2.15\nName: cs-1\nPort: \n31043\n\nTTL: \n0\n\n----------------- BEACON SERVER:\nAddress: \n10\n.0.2.15\nName: bs-1\nPort: \n31041\n\nTTL: \n0\n\n----------------- SIBRA SERVER:\nAddress: \n10\n.0.2.15\nName: sb-1\nPort: \n31045\n\nTTL: \n0\n\n----------------- BORDER ROUTER:\nAddress: \n10\n.0.2.15\nName: br-1\nPort: \n31042\n\nInterface ID: \n1\n\n\n\n\n\n\npython3 sub/scion-viz/python/as_viewer.py \n1\n-1045 \n2\n-24 -p\n\nSCION AS Viewer\n\n(\nsrc\n)\n \n1\n-1045 \n=======================\n> \n2\n-24 \n(\ndst\n)\n\n/run/shm/sciond/sd1-1045.sock\nStarting sciond at /run/shm/sciond/sd1-1045.sock\n----------------- PATH \n1\n\nMTU: \n1472\n\nIPV4: \n10\n.0.2.15\nPort: \n31042\n\nInterfaces Len: \n16\n\n\n2\n-24 \n(\n1\n)\n\n\n2\n-22 \n(\n4\n)\n\n\n2\n-22 \n(\n1\n)\n\n\n2\n-21 \n(\n2\n)\n\n\n2\n-21 \n(\n1\n)\n\n\n1\n-1 \n(\n4\n)\n\n\n1\n-1 \n(\n3\n)\n\n\n1\n-3 \n(\n1\n)\n\n\n1\n-3 \n(\n2\n)\n\n\n1\n-2 \n(\n1\n)\n\n\n1\n-2 \n(\n4\n)\n\n\n1\n-6 \n(\n1\n)\n\n\n1\n-6 \n(\n2\n)\n\n\n1\n-7 \n(\n1\n)\n\n\n1\n-7 \n(\n39\n)\n\n\n1\n-1045 \n(\n1\n)\n\n----------------- PATH \n2\n\nMTU: \n1472\n\nIPV4: \n10\n.0.2.15\nPort: \n31042\n\nInterfaces Len: \n16\n\n\n2\n-24 \n(\n1\n)\n\n\n2\n-22 \n(\n4\n)\n\n\n2\n-22 \n(\n3\n)\n\n\n4\n-41 \n(\n2\n)\n\n\n4\n-41 \n(\n1\n)\n\n\n1\n-1 \n(\n6\n)\n\n\n1\n-1 \n(\n3\n)\n\n\n1\n-3 \n(\n1\n)\n\n\n1\n-3 \n(\n2\n)\n\n\n1\n-2 \n(\n1\n)\n\n\n1\n-2 \n(\n4\n)\n\n\n1\n-6 \n(\n1\n)\n\n\n1\n-6 \n(\n2\n)\n\n\n1\n-7 \n(\n1\n)\n\n\n1\n-7 \n(\n39\n)\n\n\n1\n-1045 \n(\n1\n)\n\n----------------- PATH \n3\n\nMTU: \n1472\n\nIPV4: \n10\n.0.2.15\nPort: \n31042\n\nInterfaces Len: \n18\n\n\n2\n-24 \n(\n1\n)\n\n\n2\n-22 \n(\n4\n)\n\n\n2\n-22 \n(\n2\n)\n\n\n2\n-23 \n(\n2\n)\n\n\n2\n-23 \n(\n3\n)\n\n\n3\n-31 \n(\n3\n)\n\n\n3\n-31 \n(\n1\n)\n\n\n1\n-1 \n(\n5\n)\n\n\n1\n-1 \n(\n3\n)\n\n\n1\n-3 \n(\n1\n)\n\n\n1\n-3 \n(\n2\n)\n\n\n1\n-2 \n(\n1\n)\n\n\n1\n-2 \n(\n4\n)\n\n\n1\n-6 \n(\n1\n)\n\n\n1\n-6 \n(\n2\n)\n\n\n1\n-7 \n(\n1\n)\n\n\n1\n-7 \n(\n39\n)\n\n\n1\n-1045 \n(\n1\n)\n\n----------------- PATH \n4\n\nMTU: \n1472\n\nIPV4: \n10\n.0.2.15\nPort: \n31042\n\nInterfaces Len: \n18\n\n\n2\n-24 \n(\n1\n)\n\n\n2\n-22 \n(\n4\n)\n\n\n2\n-22 \n(\n2\n)\n\n\n2\n-23 \n(\n2\n)\n\n\n2\n-23 \n(\n1\n)\n\n\n2\n-21 \n(\n3\n)\n\n\n2\n-21 \n(\n1\n)\n\n\n1\n-1 \n(\n4\n)\n\n\n1\n-1 \n(\n3\n)\n\n\n1\n-3 \n(\n1\n)\n\n\n1\n-3 \n(\n2\n)\n\n\n1\n-2 \n(\n1\n)\n\n\n1\n-2 \n(\n4\n)\n\n\n1\n-6 \n(\n1\n)\n\n\n1\n-6 \n(\n2\n)\n\n\n1\n-7 \n(\n1\n)\n\n\n1\n-7 \n(\n39\n)\n\n\n1\n-1045 \n(\n1\n)\n\n----------------- PATH \n5\n\nMTU: \n1472\n\nIPV4: \n10\n.0.2.15\nPort: \n31042\n\nInterfaces Len: \n20\n\n\n2\n-24 \n(\n1\n)\n\n\n2\n-22 \n(\n4\n)\n\n\n2\n-22 \n(\n1\n)\n\n\n2\n-21 \n(\n2\n)\n\n\n2\n-21 \n(\n3\n)\n\n\n2\n-23 \n(\n1\n)\n\n\n2\n-23 \n(\n3\n)\n\n\n3\n-31 \n(\n3\n)\n\n\n3\n-31 \n(\n1\n)\n\n\n1\n-1 \n(\n5\n)\n\n\n1\n-1 \n(\n3\n)\n\n\n1\n-3 \n(\n1\n)\n\n\n1\n-3 \n(\n2\n)\n\n\n1\n-2 \n(\n1\n)\n\n\n1\n-2 \n(\n4\n)\n\n\n1\n-6 \n(\n1\n)\n\n\n1\n-6 \n(\n2\n)\n\n\n1\n-7 \n(\n1\n)\n\n\n1\n-7 \n(\n39\n)\n\n\n1\n-1045 \n(\n1\n)\n\n\n\n\n\n\npython3 sub/scion-viz/python/as_viewer.py \n1\n-1045 -h\nusage: as_viewer.py \n[\n-h\n]\n \n[\n--addr ADDR\n]\n \n[\n-t\n]\n \n[\n-p\n]\n \n[\n-trc\n]\n \n[\n-crt\n]\n \n[\n-c\n]\n \n[\n-pp\n]\n\n                    src_isdas \n[\ndst_isdas\n]\n\n\nSCION AS Path Viewer requires \nsource\n and destination ISD-ASes to analyze.\n\npositional arguments:\n  src_isdas    ISD-AS source.\n  dst_isdas    ISD-AS destination.\n\noptional arguments:\n  -h, --help   show this \nhelp\n message and \nexit\n\n  --addr ADDR  ip address to \nbind\n to \nif\n not localhost\n  -t           display \nsource\n AS topology\n  -p           display announced paths to destination\n  -trc         display \nsource\n TRC\n  -crt         display \nsource\n certificate chain\n  -c           display \nsource\n AS configuration\n  -pp          display \nsource\n path policy\n\n\n\n\n\npython3 sub/scion-viz/python/as_viewer.py \n1\n-1045 -pp\n\nSCION AS Viewer\n\n(\nsrc\n)\n \n1\n-1045 \n=======================\n> None \n(\ndst\n)\n\n/run/shm/sciond/sd1-1045.sock\nStarting sciond at /run/shm/sciond/sd1-1045.sock\n/home/ubuntu/go/src/github.com/netsec-ethz/scion/gen/ISD1/AS1045/endhost/path_policy.yml\n---\nBestSetSize: \n5\n\nCandidatesSetSize: \n20\n\nHistoryLimit: \n20\n\nPropertyRanges:\n  AvailableBandwidth: \n0\n-100\n  DelayTime: \n0\n-60\n  GuaranteedBandwidth: \n0\n-100\n  HopsLength: \n1\n-10\n  PeerLinks: \n0\n-100\n  TotalBandwidth: \n0\n-100\nPropertyWeights:\n  AvailableBandwidth: \n0\n\n  DelayTime: \n3\n\n  Disjointness: \n4\n\n  ExpirationTime: \n3\n\n  GuaranteedBandwidth: \n0\n\n  HopsLength: \n5\n\n  LastSeenTime: \n3\n\n  LastSentTime: \n3\n\n  PeerLinks: \n7\n\n  TotalBandwidth: \n0\n\nUnwantedASes: \n0\n-888,0-999\nUpdateAfterNumber: \n10\n\nUpdateAfterTime: \n3600\n\n\n\n\n\n\npython3 sub/scion-viz/python/as_viewer.py \n1\n-1045 -c\n\nSCION AS Viewer\n\n(\nsrc\n)\n \n1\n-1045 \n=======================\n> None \n(\ndst\n)\n\n/run/shm/sciond/sd1-1045.sock\nStarting sciond at /run/shm/sciond/sd1-1045.sock\n/home/ubuntu/go/src/github.com/netsec-ethz/scion/gen/ISD1/AS1045/endhost/as.yml\nCertChainVersion: \n0\n\nMasterASKey: \nVrMpfgsWBxZZuhhSQoIUlg\n==\n\nPropagateTime: \n5\n\nRegisterPath: \ntrue\n\nRegisterTime: \n5\n\n\n\n\n\n\npython3 sub/scion-viz/python/as_viewer.py \n1\n-1045 -crt\n\nSCION AS Viewer\n\n(\nsrc\n)\n \n1\n-1045 \n=======================\n> None \n(\ndst\n)\n\n/run/shm/sciond/sd1-1045.sock\nStarting sciond at /run/shm/sciond/sd1-1045.sock\n/home/ubuntu/go/src/github.com/netsec-ethz/scion/gen/ISD1/AS1045/endhost/certs/ISD1-AS1045-V0.crt\n\n{\n\n    \n\"0\"\n: \n{\n\n        \n\"EncAlgorithm\"\n: \n\"curve25519xsalsa20poly1305\"\n,\n        \n\"Signature\"\n: \n\"VlJptnORObEmVQDvofOcN/2i83w2/j5vk/DKFMY508IC+fkWiyMZ/XQCp4sOWMc8cMiJHObdiI99GWz/wZXGDQ==\"\n,\n        \n\"IssuingTime\"\n: \n1511289459\n,\n        \n\"SubjectSigKey\"\n: \n\"Ushs6XHb/uypmGzcmHLA3Xay4FpsrSbrKJTWU0JeesQ=\"\n,\n        \n\"SignAlgorithm\"\n: \n\"ed25519\"\n,\n        \n\"Subject\"\n: \n\"1-1045\"\n,\n        \n\"TRCVersion\"\n: \n0\n,\n        \n\"ExpirationTime\"\n: \n1542825459\n,\n        \n\"SubjectEncKey\"\n: \n\"4rQyFxRCx+eR7ygPYG96WQV9rKLl7RFY0lzXm1r2wg4=\"\n,\n        \n\"Comment\"\n: \n\"AS Certificate\"\n,\n        \n\"Issuer\"\n: \n\"1-1\"\n,\n        \n\"CanIssue\"\n: false,\n        \n\"Version\"\n: \n0\n\n    \n}\n,\n    \n\"1\"\n: \n{\n\n        \n\"EncAlgorithm\"\n: \n\"curve25519xsalsa20poly1305\"\n,\n        \n\"Signature\"\n: \n\"G4K+h8C8flqOaGR6Upt483vm4agQeoY57XvK2Ljo7uI/7u3yUcd3rlONG/7YfrHGlYSrlcLcpzPFvu9knyMFDQ==\"\n,\n        \n\"IssuingTime\"\n: \n1499177015\n,\n        \n\"SubjectSigKey\"\n: \n\"rRfaiQA8CIPWpRD5pH6rDeadutCTB+Hi+6YRh2zPS1c=\"\n,\n        \n\"SignAlgorithm\"\n: \n\"ed25519\"\n,\n        \n\"Subject\"\n: \n\"1-1\"\n,\n        \n\"TRCVersion\"\n: \n0\n,\n        \n\"ExpirationTime\"\n: \n1530713015\n,\n        \n\"SubjectEncKey\"\n: \n\"448SpoiC4OApC2UxyL8x9yFunPZ9n9Ms/AzQLMXQMmM=\"\n,\n        \n\"Comment\"\n: \n\"Core AS Certificate\"\n,\n        \n\"Issuer\"\n: \n\"1-1\"\n,\n        \n\"CanIssue\"\n: true,\n        \n\"Version\"\n: \n0\n\n    \n}\n\n\n}\n\n\n\n\n\n\npython3 sub/scion-viz/python/as_viewer.py \n1\n-1045 -trc\n\nSCION AS Viewer\n\n(\nsrc\n)\n \n1\n-1045 \n=======================\n> None \n(\ndst\n)\n\n/run/shm/sciond/sd1-1045.sock\nStarting sciond at /run/shm/sciond/sd1-1045.sock\n/home/ubuntu/go/src/github.com/netsec-ethz/scion/gen/ISD1/AS1045/endhost/certs/ISD1-V0.trc\n\n{\n\n    \n\"QuorumCAs\"\n: \n3\n,\n    \n\"Signatures\"\n: \n{\n\n        \n\"1-1\"\n: \n\"B89Z3cWTzW3j4r02b/zLMuAn1/PiF0meEa9/6/AITiyN3YGRpNNer5aD/uTziMX9IfPcUP9rEXlXKs8PCdVlBg==\"\n\n    \n}\n,\n    \n\"GracePeriod\"\n: \n18000\n,\n    \n\"RootRainsKey\"\n: \n\"dns_srv_addr\"\n,\n    \n\"CreationTime\"\n: \n1499177015\n,\n    \n\"PKILogs\"\n: \n{}\n,\n    \n\"ISDID\"\n: \n1\n,\n    \n\"CoreCAs\"\n: \n{\n\n        \n\"1-1\"\n: \n{\n\n            \n\"OfflineKey\"\n: \n\"AX0kRbqJfdnfNcpC0XMSiQuLCqQJabp8HRi6BiAKPXo=\"\n,\n            \n\"OfflineKeyAlg\"\n: \n\"Ed25519\"\n,\n            \n\"OnlineKey\"\n: \n\"VJvKbgHOsYbHlr6SGGssszGQvAtu+zXCTAJkYOCPr38=\"\n,\n            \n\"OnlineKeyAlg\"\n: \n\"Ed25519\"\n\n        \n}\n\n    \n}\n,\n    \n\"Quarantine\"\n: true,\n    \n\"Description\"\n: \n\"ISD 1\"\n,\n    \n\"QuorumOwnTRC\"\n: \n2\n,\n    \n\"RootCAs\"\n: \n{\n\n        \n\"CA1-1\"\n: \n\"MIIC4DCCAcigAwIBAwIBATANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVDQTEtMTAeFw0xNzA3MDQxNDAzMzVaFw0yMjA3MDMxNDAzMzVaMBAxDjAMBgNVBAMMBUNBMS0xMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxrPtywDofkLN4So+AhCDRsn0xeUtAp3zoa4onULpsSbdo5lj8p0nfafKplOJ7uP4txMbn8FtTcyau5W7BbQodXl/Xa6Elu4u9nyb6UgNpzmiUyCp/5TGRicv3MKSLpVZQukuj6weHLL2GGwz58qnygqoRzvsNMugwP46PZHKLmx7hg3IOR10MDDax7dtAMlzvJJWjLeMGytf75U6b5JFK2366oaDroQhhGh2TL228+3rcvMMcB/TVxHBrzGKE+uTI8XnspMGo42lN3ZzaOOvbacXH5s/Cdf3l6j6x1GdE0OHFLB2vRaKFpBN/BdW7HhDHqy/u+9/Vjh6eiOoDODMBQIDAQABo0UwQzASBgNVHRMBAf8ECDAGAQH/AgEBMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUchmrQ0w9YIrX1VjicXPcqVrouWswDQYJKoZIhvcNAQELBQADggEBAGCK0U5GFftXaRfaqgY7/dEeW3qk4zXPyCERd5la2KW8I1A4jUJ5yYZJTOovFe9Mi2NgyUG62NxN52mODNSRazZ+HxwmXVZtgUx9PEYMQVvFKoirsBbpxnx7Bnt1h9Fo0QVe1VGk0kYQ1sj/1/J4wperRDgy8bDBFB/JznY7z9S9HxfFNUgkmnMI53u/La4Yl18wB6sFNIqTeNwXNihzNWO1f3N9J9OMTjG0bjUMximNPDhUF7kCwIAXz3+C6besEqqCYq6mvcGchCL9H/zpw8vGJjwXPLbqpx0ewHlyPzEbCZqhy4kmHAodl5XU2ghuwCV/e7mSetuMlvSQPVtBXEY=\"\n,\n        \n\"CA1-3\"\n: \n\"MIIC4DCCAcigAwIBAwIBATANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVDQTEtMzAeFw0xNzA3MDQxNDAzMzVaFw0yMjA3MDMxNDAzMzVaMBAxDjAMBgNVBAMMBUNBMS0zMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoVanBcuF4ypz1U9aCMgVLLbTMI356RlmK1g2njfvfvq1ElEt1WRyWRNPNSMx6xamD5OFedODgRdbpdYvcFK89cK4BbRLSSAZ13RpAmld0RnlRAxDvUKqUcfeqz5uiuQ5lVJ+zyyKJoSea/quooAyehGVEb0qo0g1EyffWGf/E4awkDXT+w6y14cGO9r4vrPiD+re5Ufs+ht5z/AwQ9xkK6Md5uaHoHRMd0GUkxy74ef9w5AoiysB+1/ZLoFKZyl1N+q+jUwx9C79zqicYDpBQWB3gFd19sq69ZlIyX76p6od2GSV8fvlsSD+MEdChfvPy1GFsoFE7zOBLYCXXXxkqwIDAQABo0UwQzASBgNVHRMBAf8ECDAGAQH/AgEBMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQU91ybA6o68Yd/bd4wRe92F08xq7MwDQYJKoZIhvcNAQELBQADggEBADByHaGbqrI3Z9cO11xzBPzJwyS2AkFOFZ+bWPtGUwvdxoO/kFw3JTIjxD1GPM/5HQB86tjOBLKCCgwCQG/i/ZlwNU61v9aleFbJjFa5HnfuKxHxe5jtnspXjx6TBLV6KZUE82nNMnQYczlrUURmJ4gJ+9U4tLQVkmAERhq8HbCnO5wNeKkgPfKT1L3lRZP17Rh6WNQsOlUksJG6m/e8xR/BkZ0yHQuZPDUlcl7c94pL84CW1qJ7PcH3Mbi+AK/MnSDE4qjz1xCyoXvlklAOe6QrzYYLV9uvBpNJAldfr4vKHHdmWACWj03y+1pbHUB9edXZhv+skmQfpWBh4wxC/dQ=\"\n,\n        \n\"CA1-2\"\n: \n\"MIIC4DCCAcigAwIBAwIBATANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVDQTEtMjAeFw0xNzA3MDQxNDAzMzVaFw0yMjA3MDMxNDAzMzVaMBAxDjAMBgNVBAMMBUNBMS0yMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArS4eanUAEhbTtFi2zxo1YJYFG0IU/A7CD0WKyQL3TMK5HmAJY0rOth5MniTcx7OHCo4zcoMCTGXwtcfTHNnNyL3DKWoPpmjE0W8NbQpycgbcg8Wf/wBPXQ9eUKIlU7OUbIgWCOoxldr98A97N6sqxoo1u5EeNSUORYMiaEsbsgmKMxKj+jqwwJejTYL9sQLwktcXyW/sT27wBoiFeLWMpKEPp81qziub0dN42fSMgh0ZSBE68uAcwVAM3i6uT+4s+/5KoGehZ6KVjNT07TddSEcmc84Bb83oiKEThhc9xWyUOLVoIhQV/4PT6PA8fmpc1a6YfFRPSMj/Kzpl9clc9QIDAQABo0UwQzASBgNVHRMBAf8ECDAGAQH/AgEBMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUVRLUZoMbGkH6PXwIFgv578NwXi8wDQYJKoZIhvcNAQELBQADggEBAJ4oYQOIR4RLsHUGGYI9IOaki0Pvfg9DvD61wTBfkypsIc4wYI0TVeggzloxSG9DVSMuV3UYXYF5xCV24oY4CTzIazZXKsg200g/vICDdxO4hpQDgihzdUkGRRCT+zR2zi5lnWS1TZ59F0fdaGH8jEySjU8YdGv7NPKshtTFN2tx02ZoyJBa0S239L46eT7dJeJeAo3MSvNJDrwP+IE3gjL+nOLjMUreZzz94Ueqzgg7dlpFeyKJFvQvv2tUQ+SUQCUJkWZIlaOKEdMExxSKmEyI+grbLPqXtl9yVAr5WzjQQCNqRFEf/XucKLXFWV5sC+BaoWPJCcmpwbhidHAhmZo=\"\n\n    \n}\n,\n    \n\"Version\"\n: \n0\n,\n    \n\"QuorumEEPKI\"\n: \n2\n\n\n}",
            "title": "Command-line AS Visualization"
        },
        {
            "location": "/as_visualization/command_asviz/#command-line-as-visualization",
            "text": "cd  ~/go/src/github.com/netsec-ethz/scion/  python3 sub/scion-viz/python/as_viewer.py\nusage: as_viewer.py  [ -h ]   [ --addr ADDR ]   [ -t ]   [ -p ]   [ -trc ]   [ -crt ]   [ -c ]   [ -pp ] \n                    src_isdas  [ dst_isdas ] \nas_viewer.py: error: the following arguments are required: src_isdas  python3 sub/scion-viz/python/as_viewer.py -h\nusage: as_viewer.py  [ -h ]   [ --addr ADDR ]   [ -t ]   [ -p ]   [ -trc ]   [ -crt ]   [ -c ]   [ -pp ] \n                    src_isdas  [ dst_isdas ] \n\nSCION AS Path Viewer requires  source  and destination ISD-ASes to analyze.\n\npositional arguments:\n  src_isdas    ISD-AS source.\n  dst_isdas    ISD-AS destination.\n\noptional arguments:\n  -h, --help   show this  help  message and  exit \n  --addr ADDR  ip address to  bind  to  if  not localhost\n  -t           display  source  AS topology\n  -p           display announced paths to destination\n  -trc         display  source  TRC\n  -crt         display  source  certificate chain\n  -c           display  source  AS configuration\n  -pp          display  source  path policy  python3 sub/scion-viz/python/as_viewer.py  1 -1045 -t\n\nSCION AS Viewer ( src )   1 -1045  ======================= > None  ( dst ) \n/run/shm/sciond/sd1-1045.sock\nStarting sciond at /run/shm/sciond/sd1-1045.sock\n----------------- AS TOPOLOGY:  1 -1045\nis_core_as: False\nmtu:  1472 \n----------------- PATH SERVER:\nAddress:  10 .0.2.15\nName: ps-1\nPort:  31044 \nTTL:  0 \n----------------- CERTIFICATE SERVER:\nAddress:  10 .0.2.15\nName: cs-1\nPort:  31043 \nTTL:  0 \n----------------- BEACON SERVER:\nAddress:  10 .0.2.15\nName: bs-1\nPort:  31041 \nTTL:  0 \n----------------- SIBRA SERVER:\nAddress:  10 .0.2.15\nName: sb-1\nPort:  31045 \nTTL:  0 \n----------------- BORDER ROUTER:\nAddress:  10 .0.2.15\nName: br-1\nPort:  31042 \nInterface ID:  1   python3 sub/scion-viz/python/as_viewer.py  1 -1045  2 -24 -p\n\nSCION AS Viewer ( src )   1 -1045  ======================= >  2 -24  ( dst ) \n/run/shm/sciond/sd1-1045.sock\nStarting sciond at /run/shm/sciond/sd1-1045.sock\n----------------- PATH  1 \nMTU:  1472 \nIPV4:  10 .0.2.15\nPort:  31042 \nInterfaces Len:  16  2 -24  ( 1 )  2 -22  ( 4 )  2 -22  ( 1 )  2 -21  ( 2 )  2 -21  ( 1 )  1 -1  ( 4 )  1 -1  ( 3 )  1 -3  ( 1 )  1 -3  ( 2 )  1 -2  ( 1 )  1 -2  ( 4 )  1 -6  ( 1 )  1 -6  ( 2 )  1 -7  ( 1 )  1 -7  ( 39 )  1 -1045  ( 1 ) \n----------------- PATH  2 \nMTU:  1472 \nIPV4:  10 .0.2.15\nPort:  31042 \nInterfaces Len:  16  2 -24  ( 1 )  2 -22  ( 4 )  2 -22  ( 3 )  4 -41  ( 2 )  4 -41  ( 1 )  1 -1  ( 6 )  1 -1  ( 3 )  1 -3  ( 1 )  1 -3  ( 2 )  1 -2  ( 1 )  1 -2  ( 4 )  1 -6  ( 1 )  1 -6  ( 2 )  1 -7  ( 1 )  1 -7  ( 39 )  1 -1045  ( 1 ) \n----------------- PATH  3 \nMTU:  1472 \nIPV4:  10 .0.2.15\nPort:  31042 \nInterfaces Len:  18  2 -24  ( 1 )  2 -22  ( 4 )  2 -22  ( 2 )  2 -23  ( 2 )  2 -23  ( 3 )  3 -31  ( 3 )  3 -31  ( 1 )  1 -1  ( 5 )  1 -1  ( 3 )  1 -3  ( 1 )  1 -3  ( 2 )  1 -2  ( 1 )  1 -2  ( 4 )  1 -6  ( 1 )  1 -6  ( 2 )  1 -7  ( 1 )  1 -7  ( 39 )  1 -1045  ( 1 ) \n----------------- PATH  4 \nMTU:  1472 \nIPV4:  10 .0.2.15\nPort:  31042 \nInterfaces Len:  18  2 -24  ( 1 )  2 -22  ( 4 )  2 -22  ( 2 )  2 -23  ( 2 )  2 -23  ( 1 )  2 -21  ( 3 )  2 -21  ( 1 )  1 -1  ( 4 )  1 -1  ( 3 )  1 -3  ( 1 )  1 -3  ( 2 )  1 -2  ( 1 )  1 -2  ( 4 )  1 -6  ( 1 )  1 -6  ( 2 )  1 -7  ( 1 )  1 -7  ( 39 )  1 -1045  ( 1 ) \n----------------- PATH  5 \nMTU:  1472 \nIPV4:  10 .0.2.15\nPort:  31042 \nInterfaces Len:  20  2 -24  ( 1 )  2 -22  ( 4 )  2 -22  ( 1 )  2 -21  ( 2 )  2 -21  ( 3 )  2 -23  ( 1 )  2 -23  ( 3 )  3 -31  ( 3 )  3 -31  ( 1 )  1 -1  ( 5 )  1 -1  ( 3 )  1 -3  ( 1 )  1 -3  ( 2 )  1 -2  ( 1 )  1 -2  ( 4 )  1 -6  ( 1 )  1 -6  ( 2 )  1 -7  ( 1 )  1 -7  ( 39 )  1 -1045  ( 1 )   python3 sub/scion-viz/python/as_viewer.py  1 -1045 -h\nusage: as_viewer.py  [ -h ]   [ --addr ADDR ]   [ -t ]   [ -p ]   [ -trc ]   [ -crt ]   [ -c ]   [ -pp ] \n                    src_isdas  [ dst_isdas ] \n\nSCION AS Path Viewer requires  source  and destination ISD-ASes to analyze.\n\npositional arguments:\n  src_isdas    ISD-AS source.\n  dst_isdas    ISD-AS destination.\n\noptional arguments:\n  -h, --help   show this  help  message and  exit \n  --addr ADDR  ip address to  bind  to  if  not localhost\n  -t           display  source  AS topology\n  -p           display announced paths to destination\n  -trc         display  source  TRC\n  -crt         display  source  certificate chain\n  -c           display  source  AS configuration\n  -pp          display  source  path policy  python3 sub/scion-viz/python/as_viewer.py  1 -1045 -pp\n\nSCION AS Viewer ( src )   1 -1045  ======================= > None  ( dst ) \n/run/shm/sciond/sd1-1045.sock\nStarting sciond at /run/shm/sciond/sd1-1045.sock\n/home/ubuntu/go/src/github.com/netsec-ethz/scion/gen/ISD1/AS1045/endhost/path_policy.yml\n---\nBestSetSize:  5 \nCandidatesSetSize:  20 \nHistoryLimit:  20 \nPropertyRanges:\n  AvailableBandwidth:  0 -100\n  DelayTime:  0 -60\n  GuaranteedBandwidth:  0 -100\n  HopsLength:  1 -10\n  PeerLinks:  0 -100\n  TotalBandwidth:  0 -100\nPropertyWeights:\n  AvailableBandwidth:  0 \n  DelayTime:  3 \n  Disjointness:  4 \n  ExpirationTime:  3 \n  GuaranteedBandwidth:  0 \n  HopsLength:  5 \n  LastSeenTime:  3 \n  LastSentTime:  3 \n  PeerLinks:  7 \n  TotalBandwidth:  0 \nUnwantedASes:  0 -888,0-999\nUpdateAfterNumber:  10 \nUpdateAfterTime:  3600   python3 sub/scion-viz/python/as_viewer.py  1 -1045 -c\n\nSCION AS Viewer ( src )   1 -1045  ======================= > None  ( dst ) \n/run/shm/sciond/sd1-1045.sock\nStarting sciond at /run/shm/sciond/sd1-1045.sock\n/home/ubuntu/go/src/github.com/netsec-ethz/scion/gen/ISD1/AS1045/endhost/as.yml\nCertChainVersion:  0 \nMasterASKey:  VrMpfgsWBxZZuhhSQoIUlg == \nPropagateTime:  5 \nRegisterPath:  true \nRegisterTime:  5   python3 sub/scion-viz/python/as_viewer.py  1 -1045 -crt\n\nSCION AS Viewer ( src )   1 -1045  ======================= > None  ( dst ) \n/run/shm/sciond/sd1-1045.sock\nStarting sciond at /run/shm/sciond/sd1-1045.sock\n/home/ubuntu/go/src/github.com/netsec-ethz/scion/gen/ISD1/AS1045/endhost/certs/ISD1-AS1045-V0.crt { \n     \"0\" :  { \n         \"EncAlgorithm\" :  \"curve25519xsalsa20poly1305\" ,\n         \"Signature\" :  \"VlJptnORObEmVQDvofOcN/2i83w2/j5vk/DKFMY508IC+fkWiyMZ/XQCp4sOWMc8cMiJHObdiI99GWz/wZXGDQ==\" ,\n         \"IssuingTime\" :  1511289459 ,\n         \"SubjectSigKey\" :  \"Ushs6XHb/uypmGzcmHLA3Xay4FpsrSbrKJTWU0JeesQ=\" ,\n         \"SignAlgorithm\" :  \"ed25519\" ,\n         \"Subject\" :  \"1-1045\" ,\n         \"TRCVersion\" :  0 ,\n         \"ExpirationTime\" :  1542825459 ,\n         \"SubjectEncKey\" :  \"4rQyFxRCx+eR7ygPYG96WQV9rKLl7RFY0lzXm1r2wg4=\" ,\n         \"Comment\" :  \"AS Certificate\" ,\n         \"Issuer\" :  \"1-1\" ,\n         \"CanIssue\" : false,\n         \"Version\" :  0 \n     } ,\n     \"1\" :  { \n         \"EncAlgorithm\" :  \"curve25519xsalsa20poly1305\" ,\n         \"Signature\" :  \"G4K+h8C8flqOaGR6Upt483vm4agQeoY57XvK2Ljo7uI/7u3yUcd3rlONG/7YfrHGlYSrlcLcpzPFvu9knyMFDQ==\" ,\n         \"IssuingTime\" :  1499177015 ,\n         \"SubjectSigKey\" :  \"rRfaiQA8CIPWpRD5pH6rDeadutCTB+Hi+6YRh2zPS1c=\" ,\n         \"SignAlgorithm\" :  \"ed25519\" ,\n         \"Subject\" :  \"1-1\" ,\n         \"TRCVersion\" :  0 ,\n         \"ExpirationTime\" :  1530713015 ,\n         \"SubjectEncKey\" :  \"448SpoiC4OApC2UxyL8x9yFunPZ9n9Ms/AzQLMXQMmM=\" ,\n         \"Comment\" :  \"Core AS Certificate\" ,\n         \"Issuer\" :  \"1-1\" ,\n         \"CanIssue\" : true,\n         \"Version\" :  0 \n     }  }   python3 sub/scion-viz/python/as_viewer.py  1 -1045 -trc\n\nSCION AS Viewer ( src )   1 -1045  ======================= > None  ( dst ) \n/run/shm/sciond/sd1-1045.sock\nStarting sciond at /run/shm/sciond/sd1-1045.sock\n/home/ubuntu/go/src/github.com/netsec-ethz/scion/gen/ISD1/AS1045/endhost/certs/ISD1-V0.trc { \n     \"QuorumCAs\" :  3 ,\n     \"Signatures\" :  { \n         \"1-1\" :  \"B89Z3cWTzW3j4r02b/zLMuAn1/PiF0meEa9/6/AITiyN3YGRpNNer5aD/uTziMX9IfPcUP9rEXlXKs8PCdVlBg==\" \n     } ,\n     \"GracePeriod\" :  18000 ,\n     \"RootRainsKey\" :  \"dns_srv_addr\" ,\n     \"CreationTime\" :  1499177015 ,\n     \"PKILogs\" :  {} ,\n     \"ISDID\" :  1 ,\n     \"CoreCAs\" :  { \n         \"1-1\" :  { \n             \"OfflineKey\" :  \"AX0kRbqJfdnfNcpC0XMSiQuLCqQJabp8HRi6BiAKPXo=\" ,\n             \"OfflineKeyAlg\" :  \"Ed25519\" ,\n             \"OnlineKey\" :  \"VJvKbgHOsYbHlr6SGGssszGQvAtu+zXCTAJkYOCPr38=\" ,\n             \"OnlineKeyAlg\" :  \"Ed25519\" \n         } \n     } ,\n     \"Quarantine\" : true,\n     \"Description\" :  \"ISD 1\" ,\n     \"QuorumOwnTRC\" :  2 ,\n     \"RootCAs\" :  { \n         \"CA1-1\" :  \"MIIC4DCCAcigAwIBAwIBATANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVDQTEtMTAeFw0xNzA3MDQxNDAzMzVaFw0yMjA3MDMxNDAzMzVaMBAxDjAMBgNVBAMMBUNBMS0xMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxrPtywDofkLN4So+AhCDRsn0xeUtAp3zoa4onULpsSbdo5lj8p0nfafKplOJ7uP4txMbn8FtTcyau5W7BbQodXl/Xa6Elu4u9nyb6UgNpzmiUyCp/5TGRicv3MKSLpVZQukuj6weHLL2GGwz58qnygqoRzvsNMugwP46PZHKLmx7hg3IOR10MDDax7dtAMlzvJJWjLeMGytf75U6b5JFK2366oaDroQhhGh2TL228+3rcvMMcB/TVxHBrzGKE+uTI8XnspMGo42lN3ZzaOOvbacXH5s/Cdf3l6j6x1GdE0OHFLB2vRaKFpBN/BdW7HhDHqy/u+9/Vjh6eiOoDODMBQIDAQABo0UwQzASBgNVHRMBAf8ECDAGAQH/AgEBMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUchmrQ0w9YIrX1VjicXPcqVrouWswDQYJKoZIhvcNAQELBQADggEBAGCK0U5GFftXaRfaqgY7/dEeW3qk4zXPyCERd5la2KW8I1A4jUJ5yYZJTOovFe9Mi2NgyUG62NxN52mODNSRazZ+HxwmXVZtgUx9PEYMQVvFKoirsBbpxnx7Bnt1h9Fo0QVe1VGk0kYQ1sj/1/J4wperRDgy8bDBFB/JznY7z9S9HxfFNUgkmnMI53u/La4Yl18wB6sFNIqTeNwXNihzNWO1f3N9J9OMTjG0bjUMximNPDhUF7kCwIAXz3+C6besEqqCYq6mvcGchCL9H/zpw8vGJjwXPLbqpx0ewHlyPzEbCZqhy4kmHAodl5XU2ghuwCV/e7mSetuMlvSQPVtBXEY=\" ,\n         \"CA1-3\" :  \"MIIC4DCCAcigAwIBAwIBATANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVDQTEtMzAeFw0xNzA3MDQxNDAzMzVaFw0yMjA3MDMxNDAzMzVaMBAxDjAMBgNVBAMMBUNBMS0zMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoVanBcuF4ypz1U9aCMgVLLbTMI356RlmK1g2njfvfvq1ElEt1WRyWRNPNSMx6xamD5OFedODgRdbpdYvcFK89cK4BbRLSSAZ13RpAmld0RnlRAxDvUKqUcfeqz5uiuQ5lVJ+zyyKJoSea/quooAyehGVEb0qo0g1EyffWGf/E4awkDXT+w6y14cGO9r4vrPiD+re5Ufs+ht5z/AwQ9xkK6Md5uaHoHRMd0GUkxy74ef9w5AoiysB+1/ZLoFKZyl1N+q+jUwx9C79zqicYDpBQWB3gFd19sq69ZlIyX76p6od2GSV8fvlsSD+MEdChfvPy1GFsoFE7zOBLYCXXXxkqwIDAQABo0UwQzASBgNVHRMBAf8ECDAGAQH/AgEBMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQU91ybA6o68Yd/bd4wRe92F08xq7MwDQYJKoZIhvcNAQELBQADggEBADByHaGbqrI3Z9cO11xzBPzJwyS2AkFOFZ+bWPtGUwvdxoO/kFw3JTIjxD1GPM/5HQB86tjOBLKCCgwCQG/i/ZlwNU61v9aleFbJjFa5HnfuKxHxe5jtnspXjx6TBLV6KZUE82nNMnQYczlrUURmJ4gJ+9U4tLQVkmAERhq8HbCnO5wNeKkgPfKT1L3lRZP17Rh6WNQsOlUksJG6m/e8xR/BkZ0yHQuZPDUlcl7c94pL84CW1qJ7PcH3Mbi+AK/MnSDE4qjz1xCyoXvlklAOe6QrzYYLV9uvBpNJAldfr4vKHHdmWACWj03y+1pbHUB9edXZhv+skmQfpWBh4wxC/dQ=\" ,\n         \"CA1-2\" :  \"MIIC4DCCAcigAwIBAwIBATANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVDQTEtMjAeFw0xNzA3MDQxNDAzMzVaFw0yMjA3MDMxNDAzMzVaMBAxDjAMBgNVBAMMBUNBMS0yMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArS4eanUAEhbTtFi2zxo1YJYFG0IU/A7CD0WKyQL3TMK5HmAJY0rOth5MniTcx7OHCo4zcoMCTGXwtcfTHNnNyL3DKWoPpmjE0W8NbQpycgbcg8Wf/wBPXQ9eUKIlU7OUbIgWCOoxldr98A97N6sqxoo1u5EeNSUORYMiaEsbsgmKMxKj+jqwwJejTYL9sQLwktcXyW/sT27wBoiFeLWMpKEPp81qziub0dN42fSMgh0ZSBE68uAcwVAM3i6uT+4s+/5KoGehZ6KVjNT07TddSEcmc84Bb83oiKEThhc9xWyUOLVoIhQV/4PT6PA8fmpc1a6YfFRPSMj/Kzpl9clc9QIDAQABo0UwQzASBgNVHRMBAf8ECDAGAQH/AgEBMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUVRLUZoMbGkH6PXwIFgv578NwXi8wDQYJKoZIhvcNAQELBQADggEBAJ4oYQOIR4RLsHUGGYI9IOaki0Pvfg9DvD61wTBfkypsIc4wYI0TVeggzloxSG9DVSMuV3UYXYF5xCV24oY4CTzIazZXKsg200g/vICDdxO4hpQDgihzdUkGRRCT+zR2zi5lnWS1TZ59F0fdaGH8jEySjU8YdGv7NPKshtTFN2tx02ZoyJBa0S239L46eT7dJeJeAo3MSvNJDrwP+IE3gjL+nOLjMUreZzz94Ueqzgg7dlpFeyKJFvQvv2tUQ+SUQCUJkWZIlaOKEdMExxSKmEyI+grbLPqXtl9yVAr5WzjQQCNqRFEf/XucKLXFWV5sC+BaoWPJCcmpwbhidHAhmZo=\" \n     } ,\n     \"Version\" :  0 ,\n     \"QuorumEEPKI\" :  2  }",
            "title": "Command-line AS Visualization"
        }
    ]
}